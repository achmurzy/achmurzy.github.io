---
layout: post
title:  "Control and command"
date:   2016-10-10 12:29:16 -0700
categories: games blog
---

At some point between formulating the idea of What Is Done and reading through literature on game studies, I became obsessed with the idea of control interfaces such as buttons, joysticks, remotes and so on. To me, these represented the direct, corporeal link between the player’s mind and the internal logic of a game world. I tried (in vain) to think deeply about how to design a controller in order to foster this connection.

At the very least I was able to recognize that to create the kinds of games I was interested in (3D action games), a controller needed a minimal set of interface features. This included something to represent directionality, and I came to the conclusion that the modern analog joystick was about as close to perfection as one could get. Comparing the joystick to a directional pad (four buttons lain out along cardinal directions like a compass rose), I came to understand part of the mechanical subtleties that lends What Is Done its expressive power.

There are two major advantages of the joystick over a typical directional pad. Both have two major axes (vertical and horizontal) which are used to represent vectors in any planar direction, effectively simulating the unit circle. The first major advantage of joysticks is that they provide a much more fine-grained representation of the infinite number of vectors available along the unit circle. A classic D-pad can only represent eight directions as linear combinations of the four buttons–by subdividing the space between buttons a joystick can usually represent many more. This has serious implications for really expressive action gameplay, where hairpin turns and slight adjustments to a character’s velocity in motion are necessary (think Tony Hawk Pro Skater).

D-Pad buttons are also “buttons” in the traditional sense–they complete circuits when pressed, and are either ‘on’ or ‘off’. Joysticks, on the other hand, also provide a continuous representation from 0 -> 1 between the neutral state and tilt in one direction. This amounts to shortening the length of a vector in any direction, and is the foundation of a very important part of kinaesthetic gameplay: pressure sensitivity. This allows the player to selectively decrease the magnitude of all kinds of directional decisions, and facilitates “gentle” gameplay, giving precision to moments where fine adjustments need to be made (such as aiming any kind of projectile).

The idea of building any controller as an all-purpose solution to the kinaesthetic needs of an arbitrary game seemed impossible to me (and honestly still does). For the fullest expression, each game would need a finely-tuned interface device to suit the needs of specific gameplay mechanisms. This was a pipe-dream, of course, and I think our controllers do a remarkable job of suiting a large number of different situations. Moreover, learning more about 3D mathematics and programming, most kinaesthetic needs can be simulated if inputs are manipulated in a clever way. For example, a classic directional pad can be made to simulate a joystick without much issue since each shares the same basis vectors for the two-dimensional space they represent. At least focusing on developing connotative gameplay in this way gives me some agency, rather than having to, say, hire an electrical engineer to create a device for my game that nobody will be able to acquire.

Sometimes I wonder if we really cannot see the forest for the trees on this one, and if people will look back in disgust on the homogeneity of interface devices in this time period. Making software for computers is sufficiently difficult that most people have no choice but to get in line with hardware standards, however, and this seems to be especially true for video games.
