<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://localhost:4000/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.4.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-07-29T20:34:32+08:00</updated><id>http://localhost:4000//</id><title type="html">Paidia</title><subtitle>Computers.
</subtitle><entry><title type="html">Hunches</title><link href="http://localhost:4000/games/blog/2016/12/31/Hunches.html" rel="alternate" type="text/html" title="Hunches" /><published>2016-12-31T03:29:16+08:00</published><updated>2016-12-31T03:29:16+08:00</updated><id>http://localhost:4000/games/blog/2016/12/31/Hunches</id><content type="html" xml:base="http://localhost:4000/games/blog/2016/12/31/Hunches.html">&lt;p&gt;In the summer of my junior year I traveled to Pittsburgh to complete a Summer Undergraduate Research Fellowship at Carnegie Mellon University in partnership with a close friend of mine
who was a theater student there at the time. This blog is supposed to be a sequential understanding of my frame of mind as understood through the transcription and interpretation of my journals,
so I don’t want to jump too far ahead. However, one of the reasons I love reviewing the things I’ve written in the past (and why I’ll never stop writing things down) is that sometimes it is easy to
see the seeds of flowers blooming in one’s life today, on the pages left down in ink long before. One fateful entry “Expressing gameplay as language”, written in the summer of my sophmore year,
became the impetus for an entire summer’s research at Carnegie Mellon. While there, I considered the problem of automatically narrating interactive gameplay in a simple 3D environment.
    I had been informally studying linguistics, specifically formal approaches to the representation of languages (which would later become the basis of specifying programming languages), for
a while beforehand. I began to explore computational linguistics (what would become natural language processing–NLP) with an emphasis on formal grammars meant to deal with natural language in
real engineering settings (as opposed to scientific theories). These approaches would become my main line of attack when I was working at Carnegie. Needless to say we utterly failed, for reasons
familiar to NLP systems: it is easy to create something that works well in specific domains (in this case, a contextualized 3D environment and specific gameplay decisions) but generalizes poorly
to new domains (such as a completely different kind of video game).
    Around my sophmore year, this idea was more of a “hunch”. Details in the journal are correspondingly sparse. The thrust of the idea is summarized in the following entry:
    Language is believably generated as sequences of formal symbols corresponding to various linguistic structures, down to individual words. Thus, a list of symbols must be generated by
gameplay, which corresponds to a sequence acceptable to whatever grammar you define. It seems to me then that the grammar must be written in terms of the rules of game-play acts.
I had some general notion that a mapping between discrete gameplay acts, ultimately reducible to inputs on specific buttons, could be mapped to the sequence of symbols inherent in every sentence
of language. I did not have any technical or mathematical understanding regarding how this could be done. I was still leery of this feeling–I was unsure of how the creative process was
driven, and uneducated about how to realize this vague “hunch” of mine. It is now clear to me that these “hunches” drive every creative process. It always starts with a feeling–that something
should “be” a certain way. This is as true for science as it is for the artsand philosophy. That I was able to drive this hunch forward is one of the proud points in my life. It is my current model
of how to support myself as a creative person in this world.&lt;/p&gt;</content><summary type="html">In the summer of my junior year I traveled to Pittsburgh to complete a Summer Undergraduate Research Fellowship at Carnegie Mellon University in partnership with a close friend of mine
who was a theater student there at the time. This blog is supposed to be a sequential understanding of my frame of mind as understood through the transcription and interpretation of my journals,
so I don’t want to jump too far ahead. However, one of the reasons I love reviewing the things I’ve written in the past (and why I’ll never stop writing things down) is that sometimes it is easy to
see the seeds of flowers blooming in one’s life today, on the pages left down in ink long before. One fateful entry “Expressing gameplay as language”, written in the summer of my sophmore year,
became the impetus for an entire summer’s research at Carnegie Mellon. While there, I considered the problem of automatically narrating interactive gameplay in a simple 3D environment.
    I had been informally studying linguistics, specifically formal approaches to the representation of languages (which would later become the basis of specifying programming languages), for
a while beforehand. I began to explore computational linguistics (what would become natural language processing–NLP) with an emphasis on formal grammars meant to deal with natural language in
real engineering settings (as opposed to scientific theories). These approaches would become my main line of attack when I was working at Carnegie. Needless to say we utterly failed, for reasons
familiar to NLP systems: it is easy to create something that works well in specific domains (in this case, a contextualized 3D environment and specific gameplay decisions) but generalizes poorly
to new domains (such as a completely different kind of video game).
    Around my sophmore year, this idea was more of a “hunch”. Details in the journal are correspondingly sparse. The thrust of the idea is summarized in the following entry:
    Language is believably generated as sequences of formal symbols corresponding to various linguistic structures, down to individual words. Thus, a list of symbols must be generated by
gameplay, which corresponds to a sequence acceptable to whatever grammar you define. It seems to me then that the grammar must be written in terms of the rules of game-play acts.
I had some general notion that a mapping between discrete gameplay acts, ultimately reducible to inputs on specific buttons, could be mapped to the sequence of symbols inherent in every sentence
of language. I did not have any technical or mathematical understanding regarding how this could be done. I was still leery of this feeling–I was unsure of how the creative process was
driven, and uneducated about how to realize this vague “hunch” of mine. It is now clear to me that these “hunches” drive every creative process. It always starts with a feeling–that something
should “be” a certain way. This is as true for science as it is for the artsand philosophy. That I was able to drive this hunch forward is one of the proud points in my life. It is my current model
of how to support myself as a creative person in this world.</summary></entry><entry><title type="html">Second Attempt</title><link href="http://localhost:4000/games/blog/2016/12/30/Second-Attempt.html" rel="alternate" type="text/html" title="Second Attempt" /><published>2016-12-30T03:29:16+08:00</published><updated>2016-12-30T03:29:16+08:00</updated><id>http://localhost:4000/games/blog/2016/12/30/Second-Attempt</id><content type="html" xml:base="http://localhost:4000/games/blog/2016/12/30/Second-Attempt.html">&lt;p&gt;In the second semester of my sophmore year I began working on a second game. By then I had begun using a tool called Unity3D to graduate from 2D to 3D game environments. My impetus was
once again schoolwork; my failure from last time (barely completing five hours of coding with a worthless prototype) compelled me to redouble my efforts, without the needless anxiety. Scaling
back my vision I decided to completely focus on one thing: the way the player controls the character in the game. The environment would be rough and utilitarian–basically an obstacle course of
sorts for demonstrating the capabilities of the player’s body. This was not my intial plan, but beginning to do (semi-)serious programming work in Unity3D more or less forced me away from
considering anything too consequential.
    I’ve more or less grown up as a programmer in Unity3D. This was where I did my first serious self-directed physical simulations, put the rubber to the road with concepts from computer
graphics, all in an object-oriented paradigm. This gave me a good idea of what the mainstream of programming is in our world. Looking back on my notes on Unity’s “CharacterController” module, this
was a very arduous process, showing me just how much of a novice I was at the time: underlining data types for clarity, painstaking attempts at understanding what a state machine is, basic
graphical concepts like a visualization loop, windows, working with cameras, rendering geometry, dozens of pages of basic calculations in vector geometry (dot, cross, understanding arithmetic).
I had to teach myself some basic physics as well. Throughout I was able to drive myself pretty hard because I knew I was in the right place. Such concepts form the nuts and bolts of any attempt
to program an interesting physical experience in interactive entertainment.
    All of this is very much facilitated by the excellent interactive coding environment Unity3D provides. It is possible to immediately visualize the results of most important lines of code.
This is something I could do more often to this day: finding unfamiliar code and teasing it apart, line-by-line. This can be boring, or at least rouses my impatience. Programming, spitting out
line after line of code can be euphoric–studying code like this can feel like programming in slow-motion, backwards. In general my technical skills could use more discipline, and usually
benefit from slowing down and understanding the construction of a good piece of work.
    The entries in my journal slow down significantly in this period. Rather than reflecting in prose, most of this time was spent programming in a sloppy, furious state of creation. I would
not continue this pattern in my next project, instead painstakingly recording and keeping my designs, with a good balance between reflection, problem-solving and implementation. As my crash-course in Unity3D, this project did not produce much worth reflecting on: shoe-string code and a largely unplayable 3D platformer that I am proud of, as an act of will, to this day.&lt;/p&gt;</content><summary type="html">In the second semester of my sophmore year I began working on a second game. By then I had begun using a tool called Unity3D to graduate from 2D to 3D game environments. My impetus was
once again schoolwork; my failure from last time (barely completing five hours of coding with a worthless prototype) compelled me to redouble my efforts, without the needless anxiety. Scaling
back my vision I decided to completely focus on one thing: the way the player controls the character in the game. The environment would be rough and utilitarian–basically an obstacle course of
sorts for demonstrating the capabilities of the player’s body. This was not my intial plan, but beginning to do (semi-)serious programming work in Unity3D more or less forced me away from
considering anything too consequential.
    I’ve more or less grown up as a programmer in Unity3D. This was where I did my first serious self-directed physical simulations, put the rubber to the road with concepts from computer
graphics, all in an object-oriented paradigm. This gave me a good idea of what the mainstream of programming is in our world. Looking back on my notes on Unity’s “CharacterController” module, this
was a very arduous process, showing me just how much of a novice I was at the time: underlining data types for clarity, painstaking attempts at understanding what a state machine is, basic
graphical concepts like a visualization loop, windows, working with cameras, rendering geometry, dozens of pages of basic calculations in vector geometry (dot, cross, understanding arithmetic).
I had to teach myself some basic physics as well. Throughout I was able to drive myself pretty hard because I knew I was in the right place. Such concepts form the nuts and bolts of any attempt
to program an interesting physical experience in interactive entertainment.
    All of this is very much facilitated by the excellent interactive coding environment Unity3D provides. It is possible to immediately visualize the results of most important lines of code.
This is something I could do more often to this day: finding unfamiliar code and teasing it apart, line-by-line. This can be boring, or at least rouses my impatience. Programming, spitting out
line after line of code can be euphoric–studying code like this can feel like programming in slow-motion, backwards. In general my technical skills could use more discipline, and usually
benefit from slowing down and understanding the construction of a good piece of work.
    The entries in my journal slow down significantly in this period. Rather than reflecting in prose, most of this time was spent programming in a sloppy, furious state of creation. I would
not continue this pattern in my next project, instead painstakingly recording and keeping my designs, with a good balance between reflection, problem-solving and implementation. As my crash-course in Unity3D, this project did not produce much worth reflecting on: shoe-string code and a largely unplayable 3D platformer that I am proud of, as an act of will, to this day.</summary></entry><entry><title type="html">Poetics and Video Games</title><link href="http://localhost:4000/games/blog/2016/12/28/Poetics-and-Video-Games.html" rel="alternate" type="text/html" title="Poetics and Video Games" /><published>2016-12-28T03:29:16+08:00</published><updated>2016-12-28T03:29:16+08:00</updated><id>http://localhost:4000/games/blog/2016/12/28/Poetics-and-Video-Games</id><content type="html" xml:base="http://localhost:4000/games/blog/2016/12/28/Poetics-and-Video-Games.html">&lt;p&gt;I began reading Aristotle’s Poetics one winter on a whim.
The work stands as one of the first pieces of literary theory in the Western cannon, and I
found myself stringing the thing up to meet my precepts of what a video game’s narrative
should be. In the Poetics Aristotle marks down the famous distinction between tragedy and comedy.
I focused on his treatment of the elements of tragedy. Tragedy is&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;an imitation of an action that is serious, complete, and of a certain magnitude; in language embellished with each kind of artistic ornament, the several kinds being found in separate parts of the play; in the form of action, not narrative; through pity and fear effecting the proper purgation of these emotions.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Aristotle has precise meanings behind ordinary-sounding words in this definition: action,
magnitude, serious, complete, pity, fear. I attempted to re-interpret these meanings in ways that would
result in a coherent understanding of tragedy (a dramatic narrative) in the context of video
games:&lt;/p&gt;

&lt;p&gt;I. “In video games action is tantamount to gameplay.”
II. “Action therefore is an expression of inputs and their results.”
III. “For action to be complete, it must have a final end or optimal performance. An action is
    complete insofar as a the player defines its beginning or end.”
IV. “To the extent that each input has a programmed output based on context, that action
    (input) has magnitude.”
V. “Pity and fear emanate from the player’s perspective when fulfilling a performance.”&lt;/p&gt;

&lt;p&gt;I was starting to think formally. I played like I could make “axioms”, then toy with them to
prove my point. The last axiom forms the basis of most discussion–for Aristotle, pity and
fear are characteristics of both the characters in a play and the audience. The entire
purpose of tragedy is that the simulacrum of pity and fear on the stage, created by actors,
cures the audience of these emotions, which are ultimately damaging and painful. The main
connection I draw to video games is the way in which Aristotle’s Poetics can be subverted when
these are considered as one entity embodied in the player.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;An action implies personal agents, who necessarily possess certain distinctive qualities both of character and thought... and these are the two natural causes from which action springs.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Aristotle resorts to a concept called “movement-of-spirit” to describe the root causes of action
in tragedy, halting the regress of cause-and-effect represented by a plot. This accord well with
my intial definition of gameplay as a decision-making process. A “movement-of-spirit” is a
mystical Ancient-Greek way of saying decision.&lt;/p&gt;

&lt;p&gt;Character for Aristotle is the intrinsic tendencies and convictions of a character. I interpreted
this as “…the set of acquired of inherited preferences for action in a specific gameplay system.”
Thought is in many ways a more immediate version of character, describing the reactive tendencies
of a person–I interpreted this as “…action performed by the player in respose to specific feedback.”
These remain completely abstract concepts. Aristotle does not even offer a typology for understanding
how these traits might vary person-to-person. They are assumed to be highly context-dependent, and
in my turn, I define each with respect to a specific game system–character and thought promise
to differ widely in Solitaire, Pong, and Tony Hawks Pro Skater. They can only be understood in
terms of the actions available to a person. That range of action was much more limited in
Aristotle’s time.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Plot is the imitation of the action: for by plot I here mean the arrangement of the incidents.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In this way I am able to directly interpret the “plot” of a game as the sequences of gameplay
occurences and their effects. This is something I hold to myself to this day. Not only does the
plot of a video game vary from person to person, it varies from session to session. This
definition captures our intuition that decisions “matter” to some extent in games, and that
there is a uniqueness to the way that every person interacts with video games.&lt;/p&gt;

&lt;p&gt;The rest of my entry with respect to the Poetics consists of bending over backwards to subvert
all of the terminology used to dissect tragedy. Around this time a friend told me that I should be
a game critic as we were discussing some of the theories I’d been exploring under the umbrella of
“game studies”. This notion was viscerally unpleasant to me–I had always had a fear of becoming a
person such as that, sitting on the side-lines and dressing up other peoples’ work in complicated
language. This exercise with Aristotle was part of a dying gasp from that side of myself. After this
point a painful transition was nearing completion, and I would turn my attention more completely to
science, engineering and mathematics.&lt;/p&gt;</content><summary type="html">I began reading Aristotle’s Poetics one winter on a whim.
The work stands as one of the first pieces of literary theory in the Western cannon, and I
found myself stringing the thing up to meet my precepts of what a video game’s narrative
should be. In the Poetics Aristotle marks down the famous distinction between tragedy and comedy.
I focused on his treatment of the elements of tragedy. Tragedy is</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2016/11/05/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2016-11-05T03:29:16+08:00</published><updated>2016-11-05T03:29:16+08:00</updated><id>http://localhost:4000/jekyll/update/2016/11/05/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2016/11/05/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry><entry><title type="html">The bodily turn</title><link href="http://localhost:4000/games/blog/2016/10/20/The-bodily-turn.html" rel="alternate" type="text/html" title="The bodily turn" /><published>2016-10-20T03:29:16+08:00</published><updated>2016-10-20T03:29:16+08:00</updated><id>http://localhost:4000/games/blog/2016/10/20/The-bodily-turn</id><content type="html" xml:base="http://localhost:4000/games/blog/2016/10/20/The-bodily-turn.html">&lt;p&gt;A crucial turning point came from continuing to think about how action gameplay and context can merge to create a story in video games. In one entry I came to realize that my fascination with stories and interaction both flowed from the wellspring of digital characters–entities that the player controls. This became a focal point of design that let me merge my budding skills in programming and mathematics with my ideas about interaction. Designing characters remains my primary fascination with video games. It began with writing about how three-dimensional spaces are designed with a particular body in mind which explores and utilizes them.&lt;/p&gt;

&lt;p&gt;My initial analysis compared two corporeal exhibits (an art-piece in a museum and a piece of sculpture in a city) with two virtual spaces to investigate how spatial design can affect the behavior of real human bodies and fake virtual ones. I will not dwell on the corporeal designs too long. I came to the conclusion the activity originates in, and is enabled by a body. Two considerations make corporeal bodily activity relatively uninteresting. First, the promise of pain or personal harm means that Tony Hawk’s Pro Skater is an outlandish view of what “real” skateboarding is–our nervous system makes certain kinds of activity risky and difficult when we’re stuck in our own bodies. Second, our identities also limit the range of our activities–mayhem and destruction available to us in Grand Theft Auto is less likely in our own bodies where our “good names” are at risk. As a result of this, I came to the conclusion that corporeal architecture tends toward inhibition in keeping with the delicate bodies that inhabit it: guard rails hem us in on balconies, walls enclose us in bathrooms, and police forces keep us looking over the shoulder. Of course there are good reasons for these things, but they are still fundamentally limiting.&lt;/p&gt;

&lt;p&gt;Virtual spaces, on the other hand, tend toward facilitation. Every aspect of a well-crafted virtual environment is built to highlight and exploit the capabilities of bodies that inhabit it. Of course, the extent to which this is true can be a matter of style as well, and spaces in which bodies are mismatched or unsuited to their surroundings constitute another class of irony unique to interactive media. I tried to illustrate this understanding of spaces and bodies with two examples.&lt;/p&gt;

&lt;p&gt;The first came from the competitive multiplayer game Halo 3. Familiar players will remember the map called The Pit, a hemmed-in, close-quarters arena with fast-paced combat. This is one of the finest maps in the game due to its claustrophobic architecture, but the appropriateness of the space is really a result of the capabilities of the Spartan body. The features of the Spartan body are largely a result of its current arsenal–the weapons a player is carrying. The Pit is littered with weapons that enable deadly close-quarters combat: the energy sword, shotgun, rocket launcher, and others. Achieving dominance in this space with these weapons is enabled by the way tight corridors, sharp turns and steep ledges with lots of intervening cover enable close-quarters fighters to close the gap. This connection is obvious to anyone familiar with the game, but as I’ve improved as a designer it has become clear that recognizing the obvious and keeping design principles simple is at the center of making good experiences. To touch on the example of irony I mentioned earlier, the placement of the overshield–perhaps the most valuable close-quarters combat item–is relegated to the longest corridor on the map, where players who attempt to claim it are very vulnerable to long-range attack. This mismatch between the capabilities of the Spartan body and the environment that encloses it creates tension, and makes the item itself a gamble, enhancing the overall experience.&lt;/p&gt;

&lt;p&gt;I went back to Shadow of the Colossus (SotC) for a nice foil to this example. The expansive emptiness of SotC’s world bears a direct relationship to Wander and Agro. Wander’s superhuman abilities (like his sick vertical) are dwarfed, scaled back and made merely mortal in the huge spaces he sits in. This space is meant to complement the vastness of the colossi themselves–and the ‘vehicle’ (a body itself) of the horse Agro is necessary to traverse it. Importantly, the climbing feature serves a dual purpose in this space. First, to fully understand the space the player must climb a series of stone monoliths that allow Wander to gain high ground. These overlooks provide the most expansive views of the world; it is important that it is a view only, and that actually exploring the space is a strenuous and time-consuming task which must be done with the assistance of Agro. In addition, climbing is the slowest form of locomotion in the game. This is another example of irony, where a mismatch between Wander’s climbing capabilities and the environment that encloses him causes a feeling of being dwarfed by the landscape.&lt;/p&gt;

&lt;p&gt;Looking back, I probably confused myself as much as I clarified any of my thoughts when writing all of this out, but that seems inevitable when one is learning how to express ideas. The time spent writing certainly wasn’t wasted. I had too much free time back then–but then again, who knows if I could have achieved what I have without it. Small journal entries like these are responsible for giving me the courage and focus to start learning how to make these dream a reality. I can see the seed of a tree that is still growing in this focus on bodies and how they influence the design of interactive spaces. I’ll write more about how this perspective developed and resulted in my first attempt at a 3D action game.&lt;/p&gt;</content><summary type="html">A crucial turning point came from continuing to think about how action gameplay and context can merge to create a story in video games. In one entry I came to realize that my fascination with stories and interaction both flowed from the wellspring of digital characters–entities that the player controls. This became a focal point of design that let me merge my budding skills in programming and mathematics with my ideas about interaction. Designing characters remains my primary fascination with video games. It began with writing about how three-dimensional spaces are designed with a particular body in mind which explores and utilizes them.</summary></entry><entry><title type="html">Exposition</title><link href="http://localhost:4000/games/blog/2016/10/11/Exposition.html" rel="alternate" type="text/html" title="Exposition" /><published>2016-10-11T03:29:16+08:00</published><updated>2016-10-11T03:29:16+08:00</updated><id>http://localhost:4000/games/blog/2016/10/11/Exposition</id><content type="html" xml:base="http://localhost:4000/games/blog/2016/10/11/Exposition.html">&lt;p&gt;My sophomore year I started trying to make actual games. This was entirely facilitated by coursework at ASU–a fact that caused me some grief and anxiety. Inertia is difficult to overcome, and I did not feel creatively autonomous at the time. I felt lazy and uncommitted to my ‘passion’. I started though. One of the purposes of this blog is to help me understand the extent to which my writing has responsible for that.&lt;/p&gt;

&lt;p&gt;My first project was a largely feeble attempt. In some ways I underplanned (not knowing what practical concerns are necessary in undertaking a project) and in others I overplanned (writing pages and pages of exposition and prose on my ‘vision’ for the game–not actual design elements). The game was to be prepared in GameMaker8, a stripped-down, highly facilitated environment for visual programming of 2D games. The game would alternate perspectives between a brother and a sister exploring a city, looking for one another.&lt;/p&gt;

&lt;p&gt;By now I was at least ~comfortable~ trying to program something, but was still learning the basics of graphics, physics, getting comfortable thinking about numbers… skills high school freshmen have on the East Coast. Undoubtedly my failure on this project stemmed from lacking a sense of urgency (not knowing how long good software development takes) and lacking technical skills (not knowing how to do software development/programming).&lt;/p&gt;

&lt;p&gt;I don’t want to dive in to the details of how I envisioned the game. Rather, I’d like to try to explore some of the methods of planning I employed at the time. For example, in my journal I have under the heading “Tenants of gamplay”:&lt;/p&gt;

&lt;p&gt;“-Actions can configure the environment&lt;/p&gt;

&lt;p&gt;-The environment influences the range of actions available&lt;/p&gt;

&lt;p&gt;-Certain actions against certain parts of the environment advances the player toward the win-state”&lt;/p&gt;

&lt;p&gt;or “Questions:&lt;/p&gt;

&lt;p&gt;-What modules are within the environment?&lt;/p&gt;

&lt;p&gt;-What actions modify them, and how are they changed?&lt;/p&gt;

&lt;p&gt;-What are the effects of this change on the bodies in play and the environment?&lt;/p&gt;

&lt;p&gt;-How can we contextualize these modules and the actions which modify them in a city?”&lt;/p&gt;

&lt;p&gt;Asking myself questions explicitly has been a hallmark of completing dialogues with myself and interrogating my own assumptions. Questions underlie my interest in the sciences as a road to knowledge, and at this time had begun to overflow into these endeavors. It is clear that the points above are cut directly from the cloth of my musings on games the year previous. These points do not help one understand what the game will ultimately be, or more importantly how to get there.&lt;/p&gt;

&lt;p&gt;This pattern is continued for pages of exposition on my plans for the game. A large problem is continued use of abstractions such as “actions” or “modules” or “environment”. I used these as tools to complete generalized stylistic analyses and critical comparisons of video games and other artwork before. Here, I rely so heavily on them that when I sat down to make the game I had no conception of real elements, real data that needed to be included and manipulated to, you know, make something real.&lt;/p&gt;

&lt;p&gt;This is a major red flag to me now. There is a self-perpetuating character to formulating and adhering too closely to a personal philosophy (or anyone else’s). This may also be why good criticism is so poignantly separate from good art. There are those who seek to explain and those who seek to create.&lt;/p&gt;

&lt;p&gt;People who explain have to rely on the same tools over and over again across examples and situations. Any situation is squashed and molded to fit those precepts, and this is clearly what I did here. Taking coherent ideas on game-making in general, I attempted to create a plan that would adhere to it. This top-down approach must ultimately fail in creating art. I’m coming closer to understanding this. One must live in the world, and draw from it.&lt;/p&gt;

&lt;p&gt;I’ve begun to suspect more and more that using language to organize my thoughts so heavily (and so concretely, through writing) has definite trade-offs associated with it. I’ve taken to explaining my struggles understanding mathematics this way (which is getting better). Granted, it feels completely involuntary and I must consider myself married to the habit. It may be a more fundamental feature of my body and mind, compared to those who think pictorially or otherwise. I can also choose to believe that there are ways to leverage it successfully, and to my advantage, by becoming very good at organizing ideas with writing.&lt;/p&gt;</content><summary type="html">My sophomore year I started trying to make actual games. This was entirely facilitated by coursework at ASU–a fact that caused me some grief and anxiety. Inertia is difficult to overcome, and I did not feel creatively autonomous at the time. I felt lazy and uncommitted to my ‘passion’. I started though. One of the purposes of this blog is to help me understand the extent to which my writing has responsible for that.</summary></entry><entry><title type="html">Matter of perspective</title><link href="http://localhost:4000/games/blog/2016/10/11/Matter-of-perspective.html" rel="alternate" type="text/html" title="Matter of perspective" /><published>2016-10-11T03:29:16+08:00</published><updated>2016-10-11T03:29:16+08:00</updated><id>http://localhost:4000/games/blog/2016/10/11/Matter-of-perspective</id><content type="html" xml:base="http://localhost:4000/games/blog/2016/10/11/Matter-of-perspective.html">&lt;p&gt;My debt of influence to literature and drama in thinking about video games at this time is really a direct effect of the things I liked to do when I was younger. I read quite a lot when I was younger, and I’ll carry the effects of that until I die. It made transitioning to an emphasis on engineering and technology in order to learn how to develop games somewhat difficult, I believe. However, whatever clarity I have on the kinds of games I want to make comes from a deep love of narrative art and the identities of characters (people) I’ve known.&lt;/p&gt;

&lt;p&gt;In 3D games that I love, the perspective is almost always 3rd-person. The camera is separate from the body the player inhabits, and simultaneously depicts the character and the world around it. In everybody’s favorite war games of death and destruction, the first-person style is used to enhance the sense of carrying, aiming and firing a gun. Other games have used this first-person style to a much greater effect, but I still prefer a third-person perspective. In one entry of my journal I took the time to consider the analogies between this kind of geometrical point-of-view in games and the literary point of view (related to narration), as well as the practical and stylistic effects of each on a narrative.&lt;/p&gt;

&lt;p&gt;Modernist literature has inculcated the notion that the truest sense of a character is borne out in first-person narration, where a person’s thoughts and ideas can be freely expressed in the abstract–a form of expression largely unavailable to the theater, except perhaps by soliloquy and monologue. On the other hand, third-person narration casts a wider net, used to provide an “objective” sense of a wider variety of characters and details about circumstances. Even if the third-person narrator is omniscient, something is lost in the translation of a character’s thoughts and feelings into a narrator’s manner of speech.&lt;/p&gt;

&lt;p&gt;Interestingly, the case is effectively reversed when considering point-of-view in video games. Here, a third-person point-of-view is necessary to actually see a character, to see it move and react to the world in a bodily sense. Here we can see facial expressions, the way the body contorts in motion, the posture of a character–all of these things are crucial to understanding the mood of a character in a 3D action game. The most important point for me is that certain kinds of 3D action gameplay are basically impossible unless the player has simultaneous knowledge of the character’s body in space, and the variety of objects around it (especially those outside of the character’s field-of-view). Again, think of how difficult a dynamic game like Tony Hawk’s Pro Skater would be from a first-person perspective. There are notable exceptions to these points (Mirror’s Edge comes to mind first).&lt;/p&gt;

&lt;p&gt;Conversely, first-person games attempt to replace the idea of a character with the player. The player comes closer to “owning” the body of a character. The player, at all times decides where to look. Approaching a writing desk, it sits at waist-level on the screen. All other parts of the environment are close, present, and open to visual exploration. This experience is unique to video games in many ways. It will surely be at the center of new kinds of interactive interfaces (VIRTUAL_XXX_REALITY_$$$), and reflects the fact that the most interesting character in each of our lives is usually ourselves.&lt;/p&gt;

&lt;p&gt;In literature, a third-person perspective will usually cause a fundamental separation of authors and viewers from the content of the narrative. This is less true in video games, where ‘players’ are born from a positive feedback loop between viewership and authorship. Players interactively consume and produce narratives by participating in a game. My allegiance to a third-person perspective comes from a belief that this double-headed activity of consumptive production is most well-balanced by simultaneous view of the world (connected to viewership) and the character, the body (the agent of authorship).&lt;/p&gt;</content><summary type="html">My debt of influence to literature and drama in thinking about video games at this time is really a direct effect of the things I liked to do when I was younger. I read quite a lot when I was younger, and I’ll carry the effects of that until I die. It made transitioning to an emphasis on engineering and technology in order to learn how to develop games somewhat difficult, I believe. However, whatever clarity I have on the kinds of games I want to make comes from a deep love of narrative art and the identities of characters (people) I’ve known.</summary></entry><entry><title type="html">Control and command</title><link href="http://localhost:4000/games/blog/2016/10/11/Control-and-command.html" rel="alternate" type="text/html" title="Control and command" /><published>2016-10-11T03:29:16+08:00</published><updated>2016-10-11T03:29:16+08:00</updated><id>http://localhost:4000/games/blog/2016/10/11/Control-and-command</id><content type="html" xml:base="http://localhost:4000/games/blog/2016/10/11/Control-and-command.html">&lt;p&gt;At some point between formulating the idea of What Is Done and reading through literature on game studies, I became obsessed with the idea of control interfaces such as buttons, joysticks, remotes and so on. To me, these represented the direct, corporeal link between the player’s mind and the internal logic of a game world. I tried (in vain) to think deeply about how to design a controller in order to foster this connection.&lt;/p&gt;

&lt;p&gt;At the very least I was able to recognize that to create the kinds of games I was interested in (3D action games), a controller needed a minimal set of interface features. This included something to represent directionality, and I came to the conclusion that the modern analog joystick was about as close to perfection as one could get. Comparing the joystick to a directional pad (four buttons lain out along cardinal directions like a compass rose), I came to understand part of the mechanical subtleties that lends What Is Done its expressive power.&lt;/p&gt;

&lt;p&gt;There are two major advantages of the joystick over a typical directional pad. Both have two major axes (vertical and horizontal) which are used to represent vectors in any planar direction, effectively simulating the unit circle. The first major advantage of joysticks is that they provide a much more fine-grained representation of the infinite number of vectors available along the unit circle. A classic D-pad can only represent eight directions as linear combinations of the four buttons–by subdividing the space between buttons a joystick can usually represent many more. This has serious implications for really expressive action gameplay, where hairpin turns and slight adjustments to a character’s velocity in motion are necessary (think Tony Hawk Pro Skater).&lt;/p&gt;

&lt;p&gt;D-Pad buttons are also “buttons” in the traditional sense–they complete circuits when pressed, and are either ‘on’ or ‘off’. Joysticks, on the other hand, also provide a continuous representation from 0 -&amp;gt; 1 between the neutral state and tilt in one direction. This amounts to shortening the length of a vector in any direction, and is the foundation of a very important part of kinaesthetic gameplay: pressure sensitivity. This allows the player to selectively decrease the magnitude of all kinds of directional decisions, and facilitates “gentle” gameplay, giving precision to moments where fine adjustments need to be made (such as aiming any kind of projectile).&lt;/p&gt;

&lt;p&gt;The idea of building any controller as an all-purpose solution to the kinaesthetic needs of an arbitrary game seemed impossible to me (and honestly still does). For the fullest expression, each game would need a finely-tuned interface device to suit the needs of specific gameplay mechanisms. This was a pipe-dream, of course, and I think our controllers do a remarkable job of suiting a large number of different situations. Moreover, learning more about 3D mathematics and programming, most kinaesthetic needs can be simulated if inputs are manipulated in a clever way. For example, a classic directional pad can be made to simulate a joystick without much issue since each shares the same basis vectors for the two-dimensional space they represent. At least focusing on developing connotative gameplay in this way gives me some agency, rather than having to, say, hire an electrical engineer to create a device for my game that nobody will be able to acquire.&lt;/p&gt;

&lt;p&gt;Sometimes I wonder if we really cannot see the forest for the trees on this one, and if people will look back in disgust on the homogeneity of interface devices in this time period. Making software for computers is sufficiently difficult that most people have no choice but to get in line with hardware standards, however, and this seems to be especially true for video games.&lt;/p&gt;</content><summary type="html">At some point between formulating the idea of What Is Done and reading through literature on game studies, I became obsessed with the idea of control interfaces such as buttons, joysticks, remotes and so on. To me, these represented the direct, corporeal link between the player’s mind and the internal logic of a game world. I tried (in vain) to think deeply about how to design a controller in order to foster this connection.</summary></entry><entry><title type="html">Games, theoretically</title><link href="http://localhost:4000/games/blog/2016/10/06/Games,-theoretically.html" rel="alternate" type="text/html" title="Games, theoretically" /><published>2016-10-06T03:29:16+08:00</published><updated>2016-10-06T03:29:16+08:00</updated><id>http://localhost:4000/games/blog/2016/10/06/Games,-theoretically</id><content type="html" xml:base="http://localhost:4000/games/blog/2016/10/06/Games,-theoretically.html">&lt;p&gt;Most of the time when I talk about gameplay I have something rather specific in mind: three-dimensional action games where a particular character is guided by the player around a virtual space. Super Mario 64 is probably the archetypal  example of this, and one of the most perfectly executed. In formulating all the gobbledygook prior to this I tried to make a definition of gameplay that admitted all other kinds of games. It soon became clear to me that I didn’t have a clear idea what a game was, and what criteria qualified something to be “gamelike”.&lt;/p&gt;

&lt;p&gt;It began with considering how narratives unfold in games of the type mentioned before–3D action games like Shadow of the Colossus and Super Mario 64. Much of the game proper is a series of obstacles that call for the player to solve problems through gameplay. I began to question the purpose of these obstacles, like jumping puzzles or defeating enemies. Are these necessary to tell a story using interaction? Exactly what kinds of interaction can be surrogates for storytelling? In general, much of the problem solving in games do not serve a real narrative purpose–they are bumpers of “game time” between cutscenes with lots of exposition, jam-packed with plot content. At some point the obstacles end, the game is complete, and the story is over. Folks from my parent’s generation call this “winning” the game–and those folks never really understood what was so exciting about it. Why do games end? Must they? Why are we still “winning” games like we win Connect 4?&lt;/p&gt;

&lt;p&gt;These kinds of deeply semantic, basically uninteresting questions of definition kept me from making actual interactive software and instead drove me into the deep, dark world of “game studies”. This is more or less a runaway branch of anthropology that became much larger when video games and the internet became significant parts of cultural studies and new media theory in the late ’80s and throughout the ’90s. I did a lot of reading, and had fun doing it as a college freshman intent on exploring the world (mostly the library, in fact). The extensive notes I took may have actually had a positive effect on my writing skills, and was an inadvertent first experience in plumbing primary literature, which has turned out to be perhaps the most important research skill I’ve acquired.&lt;/p&gt;

&lt;p&gt;Here I’ll try to pick out the most significant works that continue to have an effect on my thinking.&lt;/p&gt;

&lt;p&gt;The uncontested doyen of game studies is a little-known Dutchman named Johan Huizinga. He wrote a little book called Homo ludens, a play on our species name meaning, roughly, “playing man”. He was interested in the history of playing and playful culture in human (Western) civilization. His definition of play bears repeating:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Play is a voluntary activity or occupation executed within certain fixed limits of time and place, according to rules freely accepted but absolutely binding, having its aim in itself and accompanied by a feeling of tension, joy, and the consciousness that it is ‘different’ from ordinary life
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This fixed, demarcated time and place in which play occurs is referred to as the “magic circle” nowadays. Earlier I mentioned my belief that game designers have little hope of “forcing” players to feel anything in particular from any kind of interactive design. That belief stems from this definition of play. A player can only ever willingly submit to the confines of a game’s rules and assumptions. To put things in dramatic terms again, I’ve always viewed this as the gaming equivalent of suspension of disbelief, which any audience member must undergo to authentically enter a theater and have a dramatic experience. Another term for this process is the “ludic attitude”–simply, the willingness to submit to the internal logic of a game. The most important thing I took away from this conception of things is an appreciation that games must have a discernible internal logic which players can recognize and submit to before play occurs.&lt;/p&gt;

&lt;p&gt;The second significant figure to emerge from this world was a Frenchman named Roger Callois. He wrote a book called Man, Play and Games which builds directly on Huizinga’s social theory of play and provides a typology of play that helps account for different “functions” of play. These divisions lie along a spectrum of two qualitative descriptions of play types:&lt;/p&gt;

&lt;p&gt;Paidia&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;…an almost indivisible principle, common to diversion, turbulence, free improvisation, and carefree gaiety is dominant. It manifests a kind of uncontrolled fantasy that can be designated by the term paidia… It intervenes in every happy exuberance which effects an immediate and disordered agitation, an impulsive and easy recreation, but readily carried to excess, whose impromptu and unruly character remains its essential if not unique reason for being.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ludus&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;This latter principle is completely impractical, even though it requires an ever greater amount of effort, patience, skill, or ingenuity. I call this second component ludus… the primitive desire to find diversion and amusement in arbitrary, perpetually recurrent obstacles…the tension and skill of the player are not related to any explicit feeling of emulation or rivalry; the conflict is with the obstacle.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;A good example of the former of these would be something like improvisational comedy. A good example of the latter of these would be a simple rule-based game like billiards or chess. Callois’s main point is that all games lie on a continuum between these two play types. I knew that the kind of gameplay that I loved in action games leaned toward paidia through activities such as exploration and navigation. The concept of paidia is still central to my thinking about what makes me enjoy my favorite games, and I am still trying to find ways to integrate it in prototypes that I work on.&lt;/p&gt;</content><summary type="html">Most of the time when I talk about gameplay I have something rather specific in mind: three-dimensional action games where a particular character is guided by the player around a virtual space. Super Mario 64 is probably the archetypal  example of this, and one of the most perfectly executed. In formulating all the gobbledygook prior to this I tried to make a definition of gameplay that admitted all other kinds of games. It soon became clear to me that I didn’t have a clear idea what a game was, and what criteria qualified something to be “gamelike”.</summary></entry><entry><title type="html">In the colossi’s shadow</title><link href="http://localhost:4000/games/blog/2016/10/02/In-the-Colossi's-shadow.html" rel="alternate" type="text/html" title="In the colossi's shadow" /><published>2016-10-02T03:29:16+08:00</published><updated>2016-10-02T03:29:16+08:00</updated><id>http://localhost:4000/games/blog/2016/10/02/In-the-Colossi's-shadow</id><content type="html" xml:base="http://localhost:4000/games/blog/2016/10/02/In-the-Colossi's-shadow.html">&lt;p&gt;The single game I can point to for my continued interest in video games is Shadow of the Colossus (SotC). This game bore heavily on my ideas about gameplay (and what a game should be in general) when I was starting college, and still does. I’ll try to give a quick run-down of my feelings and link these to specific statements I made at the time to trace the influence as best I can.&lt;/p&gt;

&lt;p&gt;The first question I asked about my elements of gameplay: “To what degree can, or should What Is Done correspond to How It Is Done?” I respond that matching these two elements is a matter of style. “One could imagine a situation in which the inputting style differs from what a player could expect to see in such a situation, … a unique instance of video game irony.” This statement amounts to my critical analysis of SotC at that time.&lt;/p&gt;

&lt;p&gt;The game is more or less a tragic drama in the Greek tradition, which I say to sound erudite. I connected some of my thoughts on this game and others to Aristotle’s dramatic theory later on, and was delighted by myself at the time. Still, the character the player inhabits is basically super-human in terms of physical and mental stamina, and the visual aesthetic of the game certainly evokes the image of an “ancient hero” that Achilles,  Heracles and other before initiated. Moreover, the main character exhibits some hubris in his quest and ultimately pays for it, and this is really the important point, going to the heart of what I think dramatic effect really is in most great games these days.&lt;/p&gt;

&lt;p&gt;In the theater, dramatic irony derives from the audience having a greater knowledge of the plot than any one of the characters, so that they can “see it coming” in some instances. Consider the moment in Romeo &amp;amp; Juliet when Romeo kills himself before the audience, who know that Juliet is not dead, but sleeping. In video games, the audience and at least some of the characters are one and the same by virtue of interactive embodiment. Video games (especially role-playing games) have played with the fact that players “inhabit” the body of a character basically forever, and the “silent protagonist” of our favorite adventure games are really a tacit admission of this dichotomy between player and character.&lt;/p&gt;

&lt;p&gt;As the effects of the character’s (and most importantly, the player’s) actions become apparent in the course of playing SotC, a strong form of dramatic irony begins to overtake the player, who is nonetheless compelled to physically complete the game in order to propel the narrative to climax and catharsis. This paradox–of the relative powerlessness implicit in dramatic irony coupled with the absolute agency of digital interaction–is exactly the kind of stylistic combination of What Is Done and How It Is Done I was getting at before. In fact, I can say with some certainty that the distinction between button inputs, physics and resources (health, grip stamina) as mechanistic forces guiding the character Wander and the conceptualizations behind those actions (killing colossi, saving the princess, even simpler predicates like running and jumping) directly inspired my ideas of those two elements.&lt;/p&gt;

&lt;p&gt;I feel as if What Is Done may appear not to have anything to do with “gameplay” as I defined it earlier, as a decision making process. I believe in some cases this is true, as it is in SotC. SotC is an essentially linear game; decision making in terms of “plot” as the designers conceived it is nil. In games with a karma system, like Fable, What Is Done may have a tangible effect on the world itself. However, this is only a more general form of What Is Done. Another answer I gave to the question at the beginning of this post is: “…How It Is Done could be translated to an entirely separate context to indicate a symbolic kinship and possibly evoke emotions from the player triggered during that past circumstance.”&lt;/p&gt;

&lt;p&gt;In SotC, one mechanic in particular inspired this interpretation of What Is Done, namely to inform “… how the player views characters, themselves, and the setting.” The fundamental mechanic of SotC is gripping climbable surfaces. How It Is Done is by holding the R1 button… and holding the R1 button more. What Is Done is that the character clings to a nearby climbable surface. Essentially, the gripping mechanic can be viewed as a gigantic extended metaphor for the relationship of the protagonist to his moribund companion, the girl he is attempting to resurrect. Rather than letting go and accepting her death, he enters into a Faustian bargain and commences to physically cling to everything in the entire game, in the name of her memory. The emotional tension behind this action increases while the character spirals into ruin, until the climax of the game, where the final futile moments consist of clinging to a staircase as gale-force winds pull the player away from his partner, the girl. In that moment, all of the agency, all of the meaning, all of the power of How It Is Done and the agency that it brought the player in felling sixteen monumental colossi, is packaged up into those moments of clinging and made ineffectual. This was the motivation behind my idea of translating bits of gameplay above for dramatic effect. This is really a form of irony too, where the expectation behind a particular action is built up throughout the game, then betrayed or changed at some other point.&lt;/p&gt;

&lt;p&gt;The most important point, however, is that SotC showed me ways to take interactive elements and make them contributors to, if not the focus of a completely new kind of narrative. I carry this torch to this day. This was me trying to suss out that idea before I knew a thing about actually creating games. This is me trying to hold onto it.&lt;/p&gt;</content><summary type="html">The single game I can point to for my continued interest in video games is Shadow of the Colossus (SotC). This game bore heavily on my ideas about gameplay (and what a game should be in general) when I was starting college, and still does. I’ll try to give a quick run-down of my feelings and link these to specific statements I made at the time to trace the influence as best I can.</summary></entry></feed>
